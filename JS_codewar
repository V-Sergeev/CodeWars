//Должна возвращать ромб из *
function diamond(n) {
  if (n%2===0 || n < 0 ) {return null}
  
  diam=Array(n);
  var k=-1;
  for(var i=0; i<n; i++){
    if(i+1<(n+1)/2) {diam[i]=' '.repeat((n-i-k-2)/2)+'*'.repeat(i+k+2)+'\n'.repeat(1); var k=i;}
    else if (i+1===(n+1)/2){diam[i]='*'.repeat(n)+'\n'.repeat(1); }
    else {  diam[i]=diam[n-1-i]; }
  }    
  return diam;
}

//Должна считать кол-ство совпадений в тексте
function duplicateCount(text){
  //...
str=Array.from(text);
  var matc='';
str.forEach(function(s) {
  if (text.match(RegExp(s, "gi")).length>1 && !RegExp(s, "gi").test(matc)) {matc+=s;}
 });
return matc.length;
}

//получает список с именами возвращает строку
function list(names){
  //your code here
  var str='';
  for(var i=0; i<names.length; i++){
   if(i===names.length-2){
    str+=names[i].name+' & '; 
   } else
    str+=names[i].name+', ';  
  }
  return str.replace(/, $/, '');
}

//азбука морзе, MORSE_CODE - таблица сопоставления(где-то там)
  decodeMorse = function(morseCode){
    
  return morseCode.replace(/^ */,'').replace(/(   )/g,' _ ').split(' ').map(function(s){
  if(s==='_'){return ' ';} else
    return MORSE_CODE[s];
}).join('');
}
